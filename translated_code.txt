this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(660.0, "No data to save。"));
ctrl.Text = ctrl.Text.Replace(LanguagePack.GetLanguageText(118.0, "ON"), LanguagePack.GetLanguageText(29.0, "OFF"));
ctrl.Text = ctrl.Text.Replace(LanguagePack.GetLanguageText(118.0, "ON"), LanguagePack.GetLanguageText(29.0, "OFF"));
ctrl.Text = ctrl.Text.Replace(LanguagePack.GetLanguageText(29.0, "OFF"), LanguagePack.GetLanguageText(118.0, "ON"));
ctrl.Text = ctrl.Text.Replace(LanguagePack.GetLanguageText(29.0, "OFF"), LanguagePack.GetLanguageText(118.0, "ON"));
this._serialPortFrmInfo.Msg = LanguagePack.GetLanguageText(651.5, "Protocol mismatch");
this._serialPortFrmInfo.Msg = LanguagePack.GetLanguageText(651.5, "Protocol mismatch");
responseInfo.Msg = LanguagePack.GetLanguageText(79.0, "Communication timeout");
responseInfo.Msg = LanguagePack.GetLanguageText(79.0, "通讯超时");
responseInfo.Msg = LanguagePack.GetLanguageText(79.0, "通讯超时");
this.WaitingShowThenClose(EnumObj.ImgType.Ok, LanguagePack.GetLanguageText(178.1, "自动WriteBMSDate_Time成功"), 2000);
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(178.2, "自动WriteBMSDate_Time失败"), 2000);
this.WaitingShow(EnumObj.ImgType.Loading, LanguagePack.GetLanguageText(592.0, "Currently executing, please wait..."));
this.WaitingShow(EnumObj.ImgType.Warning, string.IsNullOrEmpty(responseInfo.Msg) ? LanguagePack.GetLanguageText(79.0, "Communication timeout") : responseInfo.Msg);
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(30.0, "Please open the serial port first"));
this.WaitingShow(EnumObj.ImgType.Loading, LanguagePack.GetLanguageText(592.0, "正在执行中，请稍候..."));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(30.0, "Please open the serial port first"));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(668.0, "Please open the serial port first"));
this.WaitingShow(EnumObj.ImgType.Loading, LanguagePack.GetLanguageText(592.0, "正在执行中，请稍候..."));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(30.0, "Please open the serial port first"));
msgByRtn = LanguagePack.GetLanguageText(99.0, "All be completed");
msgByRtn = LanguagePack.GetLanguageText(15.0, "Version错误");
msgByRtn = LanguagePack.GetLanguageText(16.0, "数据信息CHKSUM Error");
msgByRtn = LanguagePack.GetLanguageText(17.0, "数据信息LCHKSUM Error");
msgByRtn = LanguagePack.GetLanguageText(18.0, "命令效");
msgByRtn = LanguagePack.GetLanguageText(19.0, "Format Error");
msgByRtn = LanguagePack.GetLanguageText(20.0, "效数据");
msgByRtn = LanguagePack.GetLanguageText(21.0, "Write错误");
msgByRtn = LanguagePack.GetLanguageText(22.0, "ADR错误");
msgByRtn = LanguagePack.GetLanguageText(23.0, "Communication Error");
UiMethod.SetControlText((Control)this.label60, LanguagePack.GetLanguageText(651.29, "空白"));
UiMethod.SetControlText((Control)this.label60, LanguagePack.GetLanguageText(666.0, "通讯正常"));
UiMethod.SetControlText((Control)this.label60, LanguagePack.GetLanguageText(79.0, "通讯超时"));
UiMethod.SetControlText((Control)this.label60, LanguagePack.GetLanguageText(651.5, "Protocol不匹配"));
string languageText = LanguagePack.GetLanguageText(74.0, "");
packInfo.AlarmPackNinfo.ProtectStr.Replace("," + LanguagePack.GetLanguageText(173.1, "fully"), "");
str = packInfo.AlarmPackNinfo.ProtectStr.Replace(LanguagePack.GetLanguageText(173.1, "fully"), "");
string languageText = LanguagePack.GetLanguageText(74.0, "");
string languageText = LanguagePack.GetLanguageText(id);
this._serialPortFrmInfo.Msg = LanguagePack.GetLanguageText(79.2, "beyond 16S");
this._serialPortFrmInfo.Msg = LanguagePack.GetLanguageText(79.2, "beyond 16S");
this._serialPortFrmInfo.Msg = LanguagePack.GetLanguageText(79.2, "beyond 16S");
this._serialPortFrmInfo.Msg = LanguagePack.GetLanguageText(79.2, "beyond 16S");
this._serialPortFrmInfo.Msg = LanguagePack.GetLanguageText(79.2, "beyond 16S");
str3 = str3 + LanguagePack.GetLanguageText(158.1, "CHG Circuit器高压") + ",";
str3 += ((int)num352 & 16) != 16 ? LanguagePack.GetLanguageText(158.0, "SCP") + "," : LanguagePack.GetLanguageText(158.2, "反接") + ",";
str3 += ((int)num352 & 16) != 16 ? LanguagePack.GetLanguageText(158.0, "SCP") + "," : LanguagePack.GetLanguageText(158.2, "反接") + ",";
str3 = str3 + LanguagePack.GetLanguageText(157.0, "放过流") + ",";
str3 = str3 + LanguagePack.GetLanguageText(156.0, "充过流") + ",";
str3 = str3 + LanguagePack.GetLanguageText(155.0, "Pack UVP") + ",";
str3 = str3 + LanguagePack.GetLanguageText(154.0, "Pack OVP") + ",";
str3 = str3 + LanguagePack.GetLanguageText(153.0, "Cell UVP") + ",";
str3 = str3 + LanguagePack.GetLanguageText(152.0, "Cell OVP") + ",";
str3 = str3 + LanguagePack.GetLanguageText(173.0) + ",";
str3 = str3 + LanguagePack.GetLanguageText(172.0) + ",";
str3 = str3 + LanguagePack.GetLanguageText(171.1) + ",";
str3 = str3 + LanguagePack.GetLanguageText(171.2) + ",";
str3 = str3 + LanguagePack.GetLanguageText(171.3) + ",";
str3 = str3 + LanguagePack.GetLanguageText(171.4) + ",";
str3 = str3 + LanguagePack.GetLanguageText(171.5) + ",";
str4 = str4 + LanguagePack.GetLanguageText(171.0) + ",";
str4 = str4 + LanguagePack.GetLanguageText(170.0) + ",";
str4 = str4 + LanguagePack.GetLanguageText(169.0, "采样Fault Type") + ",";
str4 = str4 + LanguagePack.GetLanguageText(168.0, "电芯Fault Type") + ",";
str4 = str4 + LanguagePack.GetLanguageText(167.0, "NTCFault Type") + ",";
str4 = str4 + LanguagePack.GetLanguageText(166.0, "DSG CircuitMOS_TFault Type") + ",";
str4 = str4 + LanguagePack.GetLanguageText(165.0, "CHG CircuitMOS_TFault Type") + ",";
str5 = str5 + LanguagePack.GetLanguageText(164.1, "放过流") + ",";
str5 = str5 + LanguagePack.GetLanguageText(164.0, "充过流") + ",";
str5 = str5 + LanguagePack.GetLanguageText(162.0, "Pack UV") + ",";
str5 = str5 + LanguagePack.GetLanguageText(161.0, "放过压") + ",";
str5 = str5 + LanguagePack.GetLanguageText(160.0, "Cell UV") + ",";
str5 = str5 + LanguagePack.GetLanguageText(159.0, "Cell OVP") + ",";
str5 = str5 + LanguagePack.GetLanguageText(164.13) + ",";
str5 = str5 + LanguagePack.GetLanguageText(164.12) + ",";
str5 = str5 + LanguagePack.GetLanguageText(164.11) + ",";
str5 = str5 + LanguagePack.GetLanguageText(164.9) + ",";
str5 = str5 + LanguagePack.GetLanguageText(164.8) + ",";
str5 = str5 + LanguagePack.GetLanguageText(164.7) + ",";
str5 = str5 + LanguagePack.GetLanguageText(164.6) + ",";
str5 = str5 + LanguagePack.GetLanguageText(164.5) + ",";
this._serialPortFrmInfo.Msg = LanguagePack.GetLanguageText(79.2, "beyond 16S");
str6 = str6 + LanguagePack.GetLanguageText(158.1, "CHG Circuit器高压") + ",";
str6 += ((int)num393 & 16) != 16 ? LanguagePack.GetLanguageText(158.0, "SCP") + "," : LanguagePack.GetLanguageText(158.2, "反接") + ",";
str6 += ((int)num393 & 16) != 16 ? LanguagePack.GetLanguageText(158.0, "SCP") + "," : LanguagePack.GetLanguageText(158.2, "反接") + ",";
str6 = str6 + LanguagePack.GetLanguageText(157.0, "放过流") + ",";
str6 = str6 + LanguagePack.GetLanguageText(156.0, "充过流") + ",";
str6 = str6 + LanguagePack.GetLanguageText(155.0, "Pack UVP") + ",";
str6 = str6 + LanguagePack.GetLanguageText(154.0, "Pack OVP") + ",";
str6 = str6 + LanguagePack.GetLanguageText(153.0, "Cell UVP") + ",";
str6 = str6 + LanguagePack.GetLanguageText(152.0, "Cell OVP") + ",";
str6 = str6 + LanguagePack.GetLanguageText(173.0) + ",";
str6 = str6 + LanguagePack.GetLanguageText(172.0) + ",";
str6 = str6 + LanguagePack.GetLanguageText(171.1) + ",";
str6 = str6 + LanguagePack.GetLanguageText(171.2) + ",";
str6 = str6 + LanguagePack.GetLanguageText(171.3) + ",";
str6 = str6 + LanguagePack.GetLanguageText(171.4) + ",";
str6 = str6 + LanguagePack.GetLanguageText(171.5) + ",";
str7 = str7 + LanguagePack.GetLanguageText(171.0) + ",";
str7 = str7 + LanguagePack.GetLanguageText(170.0) + ",";
str7 = str7 + LanguagePack.GetLanguageText(169.0, "采样Fault Type") + ",";
str7 = str7 + LanguagePack.GetLanguageText(168.0, "电芯Fault Type") + ",";
str7 = str7 + LanguagePack.GetLanguageText(167.0, "NTCFault Type") + ",";
str7 = str7 + LanguagePack.GetLanguageText(166.0, "DSG CircuitMOS_TFault Type") + ",";
str7 = str7 + LanguagePack.GetLanguageText(165.0, "CHG CircuitMOS_TFault Type") + ",";
str7 = str7 + LanguagePack.GetLanguageText(176.0, "总压Fault Type") + ",";
str7 = str7 + LanguagePack.GetLanguageText(176.1, "温差Fault Type") + ",";
str7 = str7 + LanguagePack.GetLanguageText(176.2, "采样电阻Fault Type") + ",";
str7 = str7 + LanguagePack.GetLanguageText(176.7, "Tripper release") + ",";
str7 = str7 + LanguagePack.GetLanguageText(176.3, "限流mosON路") + ",";
str7 = str7 + LanguagePack.GetLanguageText(176.4, "限流mosSCP") + ",";
str7 = str7 + LanguagePack.GetLanguageText(176.5, "检流电阻ON路") + ",";
str7 = str7 + LanguagePack.GetLanguageText(176.6, "检流电阻SCP") + ",";
str8 = str8 + LanguagePack.GetLanguageText(164.1, "放过流") + ",";
str8 = str8 + LanguagePack.GetLanguageText(164.0, "充过流") + ",";
str8 = str8 + LanguagePack.GetLanguageText(162.0, "Pack UV") + ",";
str8 = str8 + LanguagePack.GetLanguageText(161.0, "放过压") + ",";
str8 = str8 + LanguagePack.GetLanguageText(160.0, "Cell UV") + ",";
str8 = str8 + LanguagePack.GetLanguageText(159.0, "Cell OVP") + ",";
str8 = str8 + LanguagePack.GetLanguageText(164.13) + ",";
str8 = str8 + LanguagePack.GetLanguageText(164.12) + ",";
str8 = str8 + LanguagePack.GetLanguageText(164.11) + ",";
str8 = str8 + LanguagePack.GetLanguageText(164.9) + ",";
str8 = str8 + LanguagePack.GetLanguageText(164.8) + ",";
str8 = str8 + LanguagePack.GetLanguageText(164.7) + ",";
str8 = str8 + LanguagePack.GetLanguageText(164.6) + ",";
str8 = str8 + LanguagePack.GetLanguageText(164.5) + ",";
this._serialPortFrmInfo.Msg = LanguagePack.GetLanguageText(79.2, "beyond 16S");
str9 = str9 + LanguagePack.GetLanguageText(158.1, "Charger high voltage.") + ",";
str9 += ((int)num438 & 16) != 16 ? LanguagePack.GetLanguageText(158.0, "SCP") + "," : LanguagePack.GetLanguageText(158.2, "反接") + ",";
str9 += ((int)num438 & 16) != 16 ? LanguagePack.GetLanguageText(158.0, "SCP") + "," : LanguagePack.GetLanguageText(158.2, "反接") + ",";
str9 = str9 + LanguagePack.GetLanguageText(157.0, "放过流") + ",";
str9 = str9 + LanguagePack.GetLanguageText(156.0, "充过流") + ",";
str9 = str9 + LanguagePack.GetLanguageText(155.0, "Pack UVP") + ",";
str9 = str9 + LanguagePack.GetLanguageText(154.0, "Pack OVP") + ",";
str9 = str9 + LanguagePack.GetLanguageText(153.0, "Cell UVP") + ",";
str9 = str9 + LanguagePack.GetLanguageText(152.0, "Cell OVP") + ",";
str9 = str9 + LanguagePack.GetLanguageText(173.0) + ",";
str9 = str9 + LanguagePack.GetLanguageText(172.0) + ",";
str9 = str9 + LanguagePack.GetLanguageText(171.1) + ",";
str9 = str9 + LanguagePack.GetLanguageText(171.2) + ",";
str9 = str9 + LanguagePack.GetLanguageText(171.3) + ",";
str9 = str9 + LanguagePack.GetLanguageText(171.4) + ",";
str9 = str9 + LanguagePack.GetLanguageText(171.5) + ",";
str10 = str10 + LanguagePack.GetLanguageText(171.0) + ",";
str10 = str10 + LanguagePack.GetLanguageText(170.0) + ",";
str10 = str10 + LanguagePack.GetLanguageText(169.0, "Sampling fault") + ",";
str10 = str10 + LanguagePack.GetLanguageText(168.0, "Cell fault") + ",";
str10 = str10 + LanguagePack.GetLanguageText(167.0, "NTC fault") + ",";
str10 = str10 + LanguagePack.GetLanguageText(166.0, "Discharge MOS_T fault") + ",";
str10 = str10 + LanguagePack.GetLanguageText(165.0, "Charge MOS_T fault") + ",";
str10 = str10 + LanguagePack.GetLanguageText(176.0, "Total voltage fault") + ",";
str10 = str10 + LanguagePack.GetLanguageText(176.1, "Temperature difference fault") + ",";
str10 = str10 + LanguagePack.GetLanguageText(176.2, "Sampling resistor fault") + ",";
str10 = str10 + LanguagePack.GetLanguageText(176.7, "Breaker disengagement") + ",";
str10 = str10 + LanguagePack.GetLanguageText(176.3, "Current limiting MOS_T open circuit") + ",";
str10 = str10 + LanguagePack.GetLanguageText(176.4, "Current limiting MOS_T short circuit") + ",";
str10 = str10 + LanguagePack.GetLanguageText(176.5, "Current detection resistor open circuit") + ",";
str10 = str10 + LanguagePack.GetLanguageText(176.6, "urrent detection resistor short circuit") + ",";
str11 = str11 + LanguagePack.GetLanguageText(164.1, "Overdischarge current") + ",";
str11 = str11 + LanguagePack.GetLanguageText(164.0, "Overcharge current") + ",";
str11 = str11 + LanguagePack.GetLanguageText(162.0, "Total low voltage") + ",";
str11 = str11 + LanguagePack.GetLanguageText(161.0, "Overdischarge voltage") + ",";
str11 = str11 + LanguagePack.GetLanguageText(160.0, "Single cell low voltage") + ",";
str11 = str11 + LanguagePack.GetLanguageText(159.0, "Single cell overvoltage") + ",";
str11 = str11 + LanguagePack.GetLanguageText(164.13) + ",";
str11 = str11 + LanguagePack.GetLanguageText(164.12) + ",";
str11 = str11 + LanguagePack.GetLanguageText(164.11) + ",";
str11 = str11 + LanguagePack.GetLanguageText(164.9) + ",";
str11 = str11 + LanguagePack.GetLanguageText(164.8) + ",";
str11 = str11 + LanguagePack.GetLanguageText(164.7) + ",";
str11 = str11 + LanguagePack.GetLanguageText(164.6) + ",";
str11 = str11 + LanguagePack.GetLanguageText(164.5) + ",";
this._serialPortFrmInfo.Msg = LanguagePack.GetLanguageText(79.2, "beyond 16S");
str12 = str12 + LanguagePack.GetLanguageText(158.1, "CHG Circuit器高压") + ",";
str12 += ((int)num482 & 16) != 16 ? LanguagePack.GetLanguageText(158.0, "SCP") + "," : LanguagePack.GetLanguageText(158.2, "反接") + ",";
str12 += ((int)num482 & 16) != 16 ? LanguagePack.GetLanguageText(158.0, "SCP") + "," : LanguagePack.GetLanguageText(158.2, "反接") + ",";
str12 = str12 + LanguagePack.GetLanguageText(157.0, "放过流") + ",";
str12 = str12 + LanguagePack.GetLanguageText(156.0, "充过流") + ",";
str12 = str12 + LanguagePack.GetLanguageText(155.0, "Pack UVP") + ",";
str12 = str12 + LanguagePack.GetLanguageText(154.0, "Pack OVP") + ",";
str12 = str12 + LanguagePack.GetLanguageText(153.0, "Cell UVP") + ",";
str12 = str12 + LanguagePack.GetLanguageText(152.0, "Cell OVP") + ",";
str12 = str12 + LanguagePack.GetLanguageText(173.0) + ",";
str12 = str12 + LanguagePack.GetLanguageText(172.0) + ",";
str12 = str12 + LanguagePack.GetLanguageText(171.1) + ",";
str12 = str12 + LanguagePack.GetLanguageText(171.2) + ",";
str12 = str12 + LanguagePack.GetLanguageText(171.3) + ",";
str12 = str12 + LanguagePack.GetLanguageText(171.4) + ",";
str12 = str12 + LanguagePack.GetLanguageText(171.5) + ",";
str13 = str13 + LanguagePack.GetLanguageText(171.0) + ",";
str13 = str13 + LanguagePack.GetLanguageText(170.0) + ",";
str13 = str13 + LanguagePack.GetLanguageText(169.0, "采样Fault Type") + ",";
str13 = str13 + LanguagePack.GetLanguageText(168.0, "电芯Fault Type") + ",";
str13 = str13 + LanguagePack.GetLanguageText(167.0, "NTCFault Type") + ",";
str13 = str13 + LanguagePack.GetLanguageText(166.0, "DSG CircuitMOS_TFault Type") + ",";
str13 = str13 + LanguagePack.GetLanguageText(165.0, "CHG CircuitMOS_TFault Type") + ",";
str13 = str13 + LanguagePack.GetLanguageText(176.0, "总压Fault Type") + ",";
str13 = str13 + LanguagePack.GetLanguageText(176.1, "温差Fault Type") + ",";
str13 = str13 + LanguagePack.GetLanguageText(176.8, "检流电阻Fault Type") + ",";
str13 = str13 + LanguagePack.GetLanguageText(176.7, "Tripper release") + ",";
str13 = str13 + LanguagePack.GetLanguageText(176.9, "脱扣器Fault Type") + ",";
str13 = str13 + LanguagePack.GetLanguageText(176.11, "Host/slave offline") + ",";
str13 = str13 + LanguagePack.GetLanguageText(176.12, "Battery pack locked") + ",";
str14 = str14 + LanguagePack.GetLanguageText(164.1, "放过流") + ",";
str14 = str14 + LanguagePack.GetLanguageText(164.0, "充过流") + ",";
str14 = str14 + LanguagePack.GetLanguageText(162.0, "Pack UV") + ",";
str14 = str14 + LanguagePack.GetLanguageText(161.0, "放过压") + ",";
str14 = str14 + LanguagePack.GetLanguageText(160.0, "Cell UV") + ",";
str14 = str14 + LanguagePack.GetLanguageText(159.0, "Cell OVP") + ",";
str14 = str14 + LanguagePack.GetLanguageText(164.13) + ",";
str14 = str14 + LanguagePack.GetLanguageText(164.12) + ",";
str14 = str14 + LanguagePack.GetLanguageText(164.11) + ",";
str14 = str14 + LanguagePack.GetLanguageText(164.9) + ",";
str14 = str14 + LanguagePack.GetLanguageText(164.8) + ",";
str14 = str14 + LanguagePack.GetLanguageText(164.7) + ",";
str14 = str14 + LanguagePack.GetLanguageText(164.6) + ",";
str14 = str14 + LanguagePack.GetLanguageText(164.5) + ",";
this._serialPortFrmInfo.Msg = LanguagePack.GetLanguageText(79.2, "beyond 16S");
str15 = str15 + LanguagePack.GetLanguageText(158.1, "CHG Circuit器高压") + ",";
str15 += ((int)num526 & 16) != 16 ? LanguagePack.GetLanguageText(158.0, "SCP") + "," : LanguagePack.GetLanguageText(158.2, "反接") + ",";
str15 += ((int)num526 & 16) != 16 ? LanguagePack.GetLanguageText(158.0, "SCP") + "," : LanguagePack.GetLanguageText(158.2, "反接") + ",";
str15 = str15 + LanguagePack.GetLanguageText(157.0, "放过流") + ",";
str15 = str15 + LanguagePack.GetLanguageText(156.0, "充过流") + ",";
str15 = str15 + LanguagePack.GetLanguageText(155.0, "Pack UVP") + ",";
str15 = str15 + LanguagePack.GetLanguageText(154.0, "Pack OVP") + ",";
str15 = str15 + LanguagePack.GetLanguageText(153.0, "Cell UVP") + ",";
str15 = str15 + LanguagePack.GetLanguageText(152.0, "Cell OVP") + ",";
str15 = str15 + LanguagePack.GetLanguageText(173.0) + ",";
str15 = str15 + LanguagePack.GetLanguageText(172.0) + ",";
str15 = str15 + LanguagePack.GetLanguageText(171.1) + ",";
str15 = str15 + LanguagePack.GetLanguageText(171.2) + ",";
str15 = str15 + LanguagePack.GetLanguageText(171.3) + ",";
str15 = str15 + LanguagePack.GetLanguageText(171.4) + ",";
str15 = str15 + LanguagePack.GetLanguageText(171.5) + ",";
str16 = str16 + LanguagePack.GetLanguageText(171.0) + ",";
str16 = str16 + LanguagePack.GetLanguageText(170.0) + ",";
str16 = str16 + LanguagePack.GetLanguageText(169.0, "采样Fault Type") + ",";
str16 = str16 + LanguagePack.GetLanguageText(168.0, "电芯Fault Type") + ",";
str16 = str16 + LanguagePack.GetLanguageText(167.0, "NTCFault Type") + ",";
str16 = str16 + LanguagePack.GetLanguageText(166.0, "DSG CircuitMOS_TFault Type") + ",";
str16 = str16 + LanguagePack.GetLanguageText(165.0, "CHG CircuitMOS_TFault Type") + ",";
str17 = str17 + LanguagePack.GetLanguageText(164.1, "放过流") + ",";
str17 = str17 + LanguagePack.GetLanguageText(164.0, "充过流") + ",";
str17 = str17 + LanguagePack.GetLanguageText(162.0, "Pack UV") + ",";
str17 = str17 + LanguagePack.GetLanguageText(161.0, "放过压") + ",";
str17 = str17 + LanguagePack.GetLanguageText(160.0, "Cell UV") + ",";
str17 = str17 + LanguagePack.GetLanguageText(159.0, "Cell OVP") + ",";
str17 = str17 + LanguagePack.GetLanguageText(164.13) + ",";
str17 = str17 + LanguagePack.GetLanguageText(164.12) + ",";
str17 = str17 + LanguagePack.GetLanguageText(164.11) + ",";
str17 = str17 + LanguagePack.GetLanguageText(164.9) + ",";
str17 = str17 + LanguagePack.GetLanguageText(164.8) + ",";
str17 = str17 + LanguagePack.GetLanguageText(164.7) + ",";
str17 = str17 + LanguagePack.GetLanguageText(164.6) + ",";
str17 = str17 + LanguagePack.GetLanguageText(164.5) + ",";
this._serialPortFrmInfo.Msg = LanguagePack.GetLanguageText(651.5, "Protocol不匹配");
str1 = LanguagePack.GetLanguageText(541.0, "Read成功");
str1 = rtn == (byte)0 ? LanguagePack.GetLanguageText(178.0, "Setting成功") : FrmMain.GetMsgByRtn(rtn);
str1 = LanguagePack.GetLanguageText(541.0, "Read成功");
str1 = LanguagePack.GetLanguageText(541.0, "Read成功");
str1 = LanguagePack.GetLanguageText(541.0, "Read成功");
str1 = LanguagePack.GetLanguageText(541.0, "Read成功");
str1 = LanguagePack.GetLanguageText(178.0, "Setting成功");
str1 = LanguagePack.GetLanguageText(59.0);
str1 = LanguagePack.GetLanguageText(59.0);
str1 = LanguagePack.GetLanguageText(178.0, "CHG Circuit限流Setting成功");
str1 = LanguagePack.GetLanguageText(178.0, "Setting成功");
str1 = LanguagePack.GetLanguageText(59.0);
str1 = LanguagePack.GetLanguageText(59.0);
str1 = LanguagePack.GetLanguageText(59.0);
str1 = LanguagePack.GetLanguageText(59.0);
str1 = LanguagePack.GetLanguageText(59.0, "Operate Succeed");
str1 = LanguagePack.GetLanguageText(59.0);
str1 = LanguagePack.GetLanguageText(59.0);
str1 = LanguagePack.GetLanguageText(59.0);
str1 = LanguagePack.GetLanguageText(59.0);
str1 = LanguagePack.GetLanguageText(59.0);
str1 = LanguagePack.GetLanguageText(586.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = rtn == (byte)0 ? LanguagePack.GetLanguageText(59.0, "Operate Succeed") : FrmMain.GetMsgByRtn(rtn);
str1 = LanguagePack.GetLanguageText(586.0, "Read参数All be completed。");
str1 = rtn == (byte)0 ? LanguagePack.GetLanguageText(59.0, "Operate Succeed") : FrmMain.GetMsgByRtn(rtn);
str1 = LanguagePack.GetLanguageText(584.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = rtn == (byte)0 ? LanguagePack.GetLanguageText(41.0, "Vcell基准Calibration成功") : FrmMain.GetMsgByRtn(rtn);
str1 = rtn == (byte)0 ? LanguagePack.GetLanguageText(59.0, "Operate Succeed") : FrmMain.GetMsgByRtn(rtn);
str1 = rtn == (byte)0 ? LanguagePack.GetLanguageText(41.0, "Calibration成功") : FrmMain.GetMsgByRtn(rtn);
str1 = rtn == (byte)0 ? LanguagePack.GetLanguageText(41.0, "Calibration成功") : FrmMain.GetMsgByRtn(rtn);
str1 = rtn == (byte)0 ? LanguagePack.GetLanguageText(41.0, "Calibration成功") : FrmMain.GetMsgByRtn(rtn);
str1 = LanguagePack.GetLanguageText(584.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(586.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(541.0, "");
str1 = rtn == (byte)0 ? LanguagePack.GetLanguageText(178.0, "Setting成功") : FrmMain.GetMsgByRtn(rtn);
str1 = rtn == (byte)0 ? LanguagePack.GetLanguageText(553.0) : FrmMain.GetMsgByRtn(rtn);
str1 = rtn == (byte)0 ? LanguagePack.GetLanguageText(178.0, "Setting成功") : FrmMain.GetMsgByRtn(rtn);
str1 = LanguagePack.GetLanguageText(584.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(586.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = rtn == (byte)0 ? LanguagePack.GetLanguageText(178.0, "Setting成功") : FrmMain.GetMsgByRtn(rtn);
str1 = LanguagePack.GetLanguageText(541.0, "Read成功");
str1 = rtn == (byte)0 ? LanguagePack.GetLanguageText(178.0, "Setting成功") : FrmMain.GetMsgByRtn(rtn);
str1 = LanguagePack.GetLanguageText(541.0, "Read成功");
str1 = rtn == (byte)0 ? LanguagePack.GetLanguageText(178.0, "Setting成功") : FrmMain.GetMsgByRtn(rtn);
str1 = LanguagePack.GetLanguageText(541.0, "Read成功");
LanguagePack.GetLanguageText(566.0, "", (Control)this.lblVoltCell8);
str1 = rtn == (byte)0 ? LanguagePack.GetLanguageText(178.0, "Setting成功") : FrmMain.GetMsgByRtn(rtn);
str1 = rtn != (byte)0 ? FrmMain.GetMsgByRtn(rtn) : LanguagePack.GetLanguageText(59.0, "Operate Succeed");
str1 = rtn == (byte)0 ? LanguagePack.GetLanguageText(59.0, "Operate Succeed") : FrmMain.GetMsgByRtn(rtn);
str1 = rtn == (byte)0 ? LanguagePack.GetLanguageText(59.0, "Operate Succeed") : FrmMain.GetMsgByRtn(rtn);
str1 = LanguagePack.GetLanguageText(541.0, "Read成功");
str1 = LanguagePack.GetLanguageText(541.0, "Read成功");
str1 = LanguagePack.GetLanguageText(541.0, "Read成功");
str1 = LanguagePack.GetLanguageText(584.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(586.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(584.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(586.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(584.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(586.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(584.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(586.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(584.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(586.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(584.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(586.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(584.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(586.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(584.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(586.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(584.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(586.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(587.1, "MOS_T及ENV_T参数 该组数据不存在，跳过") + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(584.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(586.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(584.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(586.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(584.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(586.0) + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
str1 = LanguagePack.GetLanguageText(587.3, "ENV_TTcell参数 该组数据不存在，跳过") + this._paramsFinishedCount.ToString() + "/" + this._paramsTotalCount.ToString();
this.WaitingShow(EnumObj.ImgType.Ok, LanguagePack.GetLanguageText(587.2));
this.frmDialog = UiMethod.MessageBox(this, LanguagePack.GetLanguageText(59.0, "Operate Succeed"));
this.frmDialog = UiMethod.MessageBox(this, LanguagePack.GetLanguageText(202.0, "Operate Fail"));
this.frmDialog = UiMethod.MessageBox(this, byte.Parse(Encoding.ASCII.GetString(entity.Data, 7, 2), NumberStyles.HexNumber) == (byte)0 ? LanguagePack.GetLanguageText(586.0) : LanguagePack.GetLanguageText(187.0));
this.frmDialog = UiMethod.MessageBox(this, byte.Parse(Encoding.ASCII.GetString(entity.Data, 7, 2), NumberStyles.HexNumber) == (byte)0 ? LanguagePack.GetLanguageText(586.0) : LanguagePack.GetLanguageText(187.0));
string languageText = LanguagePack.GetLanguageText(541.0, "Read成功");
str1 = LanguagePack.GetLanguageText(586.0, "Read参数All be completed。") + "Value=" + num288.ToString();
str1 = rtn == (byte)0 ? LanguagePack.GetLanguageText(59.0, "Setting成功") : FrmMain.GetMsgByRtn(rtn);
str1 = LanguagePack.GetLanguageText(586.0, "Read参数All be completed。");
str1 = LanguagePack.GetLanguageText(541.0, "Read成功");
str1 = LanguagePack.GetLanguageText(541.0, "Read成功");
str1 = LanguagePack.GetLanguageText(541.0, "Read成功");
str1 = rtn == (byte)0 ? LanguagePack.GetLanguageText(59.0, "Operate Succeed") : FrmMain.GetMsgByRtn(rtn);
LanguagePack.GetLanguageText(651.5, "Protocol不匹配", (Control)this.prBar);
LanguagePack.GetLanguageText(651.28, "有ADDR超时", (Control)this.prBar);
LanguagePack.GetLanguageText(651.31, "有pack超时", (Control)this.prBar);
LanguagePack.GetLanguageText(666.0, "正常", (Control)this.prBar);
UiMethod.SetControlText((Control)this.TxtProtocolCode, string.IsNullOrEmpty(this.BmsProtocolCode) ? LanguagePack.GetLanguageText(74.0, "") + "," + "HS-PACE-232-BP-V1.1".Replace("PACE", "PC") : this.BmsProtocolCode.Replace("PACE", "PC"));
LanguagePack.GetLanguageText(79.0, "通讯超时", (Control)this.prBar);
if (this.btnOpenOrClose.Text == LanguagePack.GetLanguageText(2.0, "Close Serial Port"))
this.frmDialog = UiMethod.MessageBox(this, LanguagePack.GetLanguageText(7.0, "No serial port..."));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(30.0, "Please open the serial port first"));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, "(*)" + LanguagePack.GetLanguageText(504.1, "Cannot Be Null"), 1000);
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(141.0));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(142.0));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(143.0));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(144.0));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(145.0));
this.frmDialog = UiMethod.MessageBox(this, LanguagePack.GetLanguageText(146.0));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(149.0));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(181.0));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(182.0));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(147.0));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(148.0));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, string.Format(LanguagePack.GetLanguageText(514.0, "Voltage Reference Range："), (object)paramSetting.Min, (object)paramSetting.Max));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, string.Format(LanguagePack.GetLanguageText(514.0, "Voltage Reference Range: "), (object)paramSetting.Min, (object)paramSetting.Max));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, string.Format(LanguagePack.GetLanguageText(513.0, "Pack Voltage范围"), (object)paramSetting.Min, (object)paramSetting.Max));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, string.Format(LanguagePack.GetLanguageText(513.0, "Pack Voltage范围"), (object)paramSetting.Min, (object)paramSetting.Max));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, string.Format(LanguagePack.GetLanguageText(512.0, "CHG CircuitPackCurrentCalibration范围："), (object)paramSetting.Min, (object)paramSetting.Max));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, string.Format(LanguagePack.GetLanguageText(512.0, "CHG CircuitPackCurrentCalibration范围："), (object)paramSetting.Min, (object)paramSetting.Max));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, string.Format(LanguagePack.GetLanguageText(511.0, "数值范围："), (object)paramSetting.Min, (object)paramSetting.Max));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, string.Format(LanguagePack.GetLanguageText(511.0, "数值范围："), (object)paramSetting.Min, (object)paramSetting.Max));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, string.Format(LanguagePack.GetLanguageText(510.0, "DSG CircuitPackCurrentCalibration范围："), (object)paramSetting.Min, (object)paramSetting.Max));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, string.Format(LanguagePack.GetLanguageText(510.0, "DSG CircuitPackCurrentCalibration范围："), (object)paramSetting.Min, (object)paramSetting.Max));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(651.15, "Operate Fail：输入错误"), 1200);
UiMethod.MessageBox(this, LanguagePack.GetLanguageText(506.0, "数据格式不对"));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(504.0, "Cannot Be Null"), 1200);
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(505.0, "Cannot be more than 20 characters"), 1200);
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(670.0, "请先ON监控。"), 1200);
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(669.0, "该编码已经被使用过。"), 1200);
LanguagePack.GetLanguageText(596.0, "Pause", (Control)this.btnStorePause);
LanguagePack.GetLanguageText(597.0, "Continue", (Control)this.btnStorePause);
LanguagePack.GetLanguageText(651.29, "空白", (Control)this.lblStoreMsg);
this.WaitingShowThenClose(EnumObj.ImgType.Warning, string.Format(LanguagePack.GetLanguageText(651.0, "Range value must be: 1~65535"), (object)1, (object)(int)ushort.MaxValue));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, string.Format(LanguagePack.GetLanguageText(651.1, "Range value must be: ~65535"), (object)1, (object)(int)ushort.MaxValue));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(30.0, "Please open the serial port first"));
LanguagePack.GetLanguageText(502.1, "Reading in progress", (Control)this.lblStoreMsg);
LanguagePack.GetLanguageText(651.16, "Serial Port已ON ", (Control)this.prBar);
msg = LanguagePack.GetLanguageText(502.0, "No more data", (Control)this.lblStoreMsg) + "!";
LanguagePack.GetLanguageText(651.16, "Serial Port已ON ", (Control)this.prBar);
string languageText = LanguagePack.GetLanguageText(502.0, "No more data", (Control)this.lblStoreMsg);
LanguagePack.GetLanguageText(651.16, "Serial Port已ON ", (Control)this.prBar);
string languageText = LanguagePack.GetLanguageText(79.0, "通讯超时", (Control)this.lblStoreMsg);
string languageText1 = LanguagePack.GetLanguageText(541.0, "Read成功", (Control)this.lblStoreMsg);
Msg = LanguagePack.GetLanguageText(303.0, "数据删除后将法恢复，OK要删除吗？")
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(30.0, "Please open the serial port first"));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(660.0, "没有可Save的数据。"));
saveFileDialog1.Title = LanguagePack.GetLanguageText(37.0, "SaveEXECL File");
saveFileDialog1.Filter = string.Format("{0}(*.xls) |*.xls", (object)LanguagePack.GetLanguageText(38.0, "EXECL File"));
this.WaitingShow(EnumObj.ImgType.None, LanguagePack.GetLanguageText(592.0, "正在执行中，请稍候..."));
this.WaitingShow(EnumObj.ImgType.None, LanguagePack.GetLanguageText(592.0, "正在执行中，请稍候...") + "   " + num.ToString());
UiMethod.MessageBox(this, flag ? LanguagePack.GetLanguageText(39.1, "SaveEXCEL成功") : LanguagePack.GetLanguageText(40.0, "Save实时数据失败"));
UiMethod.MessageBox(this, flag ? LanguagePack.GetLanguageText(39.1, "SaveEXCEL成功") : LanguagePack.GetLanguageText(40.0, "Save实时数据失败"));
string languageText = LanguagePack.GetLanguageText(result);
this.WaitingShowThenClose(EnumObj.ImgType.Warning, "(*)" + LanguagePack.GetLanguageText(504.1, "输入有误"), 1000);
saveFileDialog.Title = LanguagePack.GetLanguageText(137.0, "Savexml File");
saveFileDialog.Filter = string.Format("{0}(*.xml) |*.xml ", (object)LanguagePack.GetLanguageText(138.0, "xml File"));
this.WaitingShow(EnumObj.ImgType.Loading, LanguagePack.GetLanguageText(592.0, "正在执行中，请..."));
this.WaitingShow(EnumObj.ImgType.Ok, LanguagePack.GetLanguageText(593.0, "全部All be completed"));
this.WaitingShow(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(65.0, "Operate Fail"));
openFileDialog1.Filter = string.Format("{0}(*.xml)|*.xml", (object)LanguagePack.GetLanguageText(138.0, "xml File"));
this.WaitingShow(EnumObj.ImgType.Loading, LanguagePack.GetLanguageText(592.0, "正在执行中，请..."));
this.WaitingShow(EnumObj.ImgType.Ok, LanguagePack.GetLanguageText(593.0, "全部All be completed"));
if (this.btnOpenOrClose.Text == LanguagePack.GetLanguageText(2.0, "Close"))
this.frmDialog = UiMethod.MessageBox(this, LanguagePack.GetLanguageText(7.0, "Select Port..."));
LanguagePack.GetLanguageText(1.0, "Open", (Control)this.btnOpenOrClose);
LanguagePack.GetLanguageText(2.1, "Serial Port Closed", (Control)this.prBar);
LanguagePack.GetLanguageText(2.0, "Close", (Control)this.btnOpenOrClose);
LanguagePack.GetLanguageText(1.1, "Serial Port is Open", (Control)this.prBar);
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(65.0, "Operate Fail") + "\r\n" + msg, 1500);
LanguagePack.GetLanguageText(596.0, "Pause", (Control)this.btnStorePause);
LanguagePack.GetLanguageText(597.0, "Continue", (Control)this.lblStoreMsg);
LanguagePack.GetLanguageText(597.0, "Continue", (Control)this.btnStorePause);
LanguagePack.GetLanguageText(596.0, "Pause", (Control)this.lblStoreMsg);
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(140.0, "请选择串数"));
this.WaitingShowThenClose(EnumObj.ImgType.Ok, LanguagePack.GetLanguageText(59.0, "Operate Succeed。"));
this.WaitingShowThenClose(EnumObj.ImgType.Ok, LanguagePack.GetLanguageText(660.1, "已Clear"));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(505.0, "Cannot be more than 20 characters"));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(598.0, "请先从下拉框中选择一个值"), 1200);
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(598.0, "请先从下拉框中选择一个值"), 1200);
string languageText = LanguagePack.GetLanguageText(502.1, "Reading in progress", (Control)this.lblStoreMsg);
str4 = str4 + LanguagePack.GetLanguageText(152.0) + ",";
str4 = str4 + LanguagePack.GetLanguageText(153.0) + ",";
str4 = str4 + LanguagePack.GetLanguageText(154.0) + ",";
str4 = str4 + LanguagePack.GetLanguageText(155.0) + ",";
str4 = str4 + LanguagePack.GetLanguageText(156.0) + ",";
str4 = str4 + LanguagePack.GetLanguageText(157.0) + ",";
str4 = str4 + LanguagePack.GetLanguageText(158.0) + ",";
str4 = str4 + LanguagePack.GetLanguageText(158.1) + ",";
str4 = str4 + LanguagePack.GetLanguageText(171.5) + ",";
str4 = str4 + LanguagePack.GetLanguageText(171.4) + ",";
str4 = str4 + LanguagePack.GetLanguageText(171.3) + ",";
str4 = str4 + LanguagePack.GetLanguageText(171.2) + ",";
str4 = str4 + LanguagePack.GetLanguageText(171.1) + ",";
str4 = str4 + LanguagePack.GetLanguageText(172.0) + ",";
str4 = str4 + LanguagePack.GetLanguageText(173.0) + ",";
str4 = str4 + LanguagePack.GetLanguageText(173.1) + ",";
str5 = str5 + LanguagePack.GetLanguageText(165.0, "charging MOS_TFET malfunction") + ",";
str5 = str5 + LanguagePack.GetLanguageText(166.0, "discharge MOS_TFET failure") + ",";
str5 = str5 + LanguagePack.GetLanguageText(167.0) + ",";
str5 = str5 + LanguagePack.GetLanguageText(168.0) + ",";
str5 = str5 + LanguagePack.GetLanguageText(169.0) + ",";
str5 = str5 + LanguagePack.GetLanguageText(170.0) + ",";
str5 = str5 + LanguagePack.GetLanguageText(171.0) + ",";
str6 = str6 + LanguagePack.GetLanguageText(159.0) + ",";
str6 = str6 + LanguagePack.GetLanguageText(160.0) + ",";
str6 = str6 + LanguagePack.GetLanguageText(161.0) + ",";
str6 = str6 + LanguagePack.GetLanguageText(162.0) + ",";
str6 = str6 + LanguagePack.GetLanguageText(164.0) + ",";
str6 = str6 + LanguagePack.GetLanguageText(164.1) + ",";
str6 = str6 + LanguagePack.GetLanguageText(164.5) + ",";
str6 = str6 + LanguagePack.GetLanguageText(164.6) + ",";
str6 = str6 + LanguagePack.GetLanguageText(164.7) + ",";
str6 = str6 + LanguagePack.GetLanguageText(164.8) + ",";
str6 = str6 + LanguagePack.GetLanguageText(164.9) + ",";
str6 = str6 + LanguagePack.GetLanguageText(164.11) + ",";
str6 = str6 + LanguagePack.GetLanguageText(164.12) + ",";
str6 = str6 + LanguagePack.GetLanguageText(164.13) + ",";
string languageText1 = LanguagePack.GetLanguageText(74.0, "None");
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(598.0, "请先从下拉框中选择一个值"), 1200);
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(659.1, "请在上面的Column表中选择要导出的表。"));
LanguagePack.GetLanguageText(600.0, "Close", this.Controls.Find("lblBalance" + index.ToString(), true)[0]);
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(659.1, "请在上面的Column表中选择要导出的表。"));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(659.1, "请在上面的Column表中选择要导出的表。"), 1200);
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(304.0, "这Yes当前Tool Name正在使用的表，不允许删除。"), 1200);
Msg = LanguagePack.GetLanguageText(303.0, "表删除后将法恢复，OK要删除吗？")
this.WaitingShowThenClose(EnumObj.ImgType.Ok, LanguagePack.GetLanguageText(59.0, "Operate Succeed。"));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(65.0, "Operate Fail。"));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(504.0, "Cannot Be Null"));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, string.Format(LanguagePack.GetLanguageText(505.1, "不能超过N个字符"), (object)this._packSnLength), 1200);
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(669.0, "条形码已经被使用过。"), 1200);
this.WaitingShowThenClose(EnumObj.ImgType.Warning, string.Format(LanguagePack.GetLanguageText(505.1, "不能超过N个字符"), (object)this._packSnLength), 1200);
this.WaitingShowThenClose(EnumObj.ImgType.Ok, LanguagePack.GetLanguageText(59.0, "Operate Succeed。"));
this.WaitingShowThenClose(EnumObj.ImgType.Ok, LanguagePack.GetLanguageText(65.0, "Operate Fail。"));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(660.0, "没有可Save的数据。"));
saveFileDialog1.Title = LanguagePack.GetLanguageText(37.0, "SaveEXECL File");
saveFileDialog1.Filter = string.Format("{0}(*.xls) |*.xls", (object)LanguagePack.GetLanguageText(38.0, "EXECL File"));
this.WaitingShow(EnumObj.ImgType.Loading, LanguagePack.GetLanguageText(592.0, "正在执行中，请稍候..."));
this.WaitingShow(EnumObj.ImgType.Ok, LanguagePack.GetLanguageText(39.1, "SaveEXCEL成功"));
this.WaitingShowThenClose(EnumObj.ImgType.Ok, LanguagePack.GetLanguageText(59.0, "Operate Succeed"));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(303.2, "除当前正在使用的表外，并可删除的表。"), 1500);
Msg = LanguagePack.GetLanguageText(303.0, "After deleting the table, it cannot be recovered. Are you sure you want to delete?")
this.WaitingShowThenClose(EnumObj.ImgType.Ok, LanguagePack.GetLanguageText(59.0, "Operate Succeed。"));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(65.0, "Operate Fail。"));
this.WaitingShowThenClose(EnumObj.ImgType.Ok, LanguagePack.GetLanguageText(651.2, "Copied。"));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(651.3, "复制失败。"), 1500);
this.WaitingShowThenClose(EnumObj.ImgType.Ok, LanguagePack.GetLanguageText(651.2, "Copied。"));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(651.3, "复制失败。"), 1500);
this.WaitingShow(EnumObj.ImgType.Loading, LanguagePack.GetLanguageText(592.0, "正在执行中，请稍候..."));
this.WaitingShowThenClose(EnumObj.ImgType.Ok, LanguagePack.GetLanguageText(593.0, "All be completed。"));
text += LanguagePack.GetLanguageText(651.7, "Double-click to copy.");
text += LanguagePack.GetLanguageText(651.8, "Click to switch language");
text += LanguagePack.GetLanguageText(651.9, "Click to take a screenshot.");
LanguagePack.GetLanguageText(3.0, "Start Monitor", (Control)this.prBar);
LanguagePack.GetLanguageText(4.0, "Stop Monitor", (Control)this.prBar);
string languageText = LanguagePack.GetLanguageText(59.0, "Operate Succeed。");
string msg1 = string.Format(LanguagePack.GetLanguageText(651.11, "输入有误。"), (object)0, (object)(int)byte.MaxValue);
string msg2 = string.Format(LanguagePack.GetLanguageText(651.11, "输入有误。"), (object)0, (object)(int)ushort.MaxValue);
this.WaitingShowThenClose(EnumObj.ImgType.Ok, LanguagePack.GetLanguageText(660.1, "已Clear"));
UiMethod.MessageBox(this, string.Format(LanguagePack.GetLanguageText(651.11, "输入有误：正确范围A~A正整数"), (object)0, (object)100));
UiMethod.MessageBox(this, string.Format(LanguagePack.GetLanguageText(651.11, "输入有误：正确范围A~A正整数"), (object)0, (object)100));
UiMethod.MessageBox(this, string.Format(LanguagePack.GetLanguageText(651.11, "Input error: Correct range is from A to A, positive integer."), (object)0, (object)80));
UiMethod.MessageBox(this, LanguagePack.GetLanguageText(651.15, "Invalid Input"));
this.WaitingShowThenClose(EnumObj.ImgType.Warning, LanguagePack.GetLanguageText(598.0, "Please first select a value from the dropdown box"), 1200);
string languageText = LanguagePack.GetLanguageText(648.0, "输入有误。");
UiMethod.MessageBox(this, LanguagePack.GetLanguageText(504.0, "输入值不能为空。"));
UiMethod.MessageBox(this, LanguagePack.GetLanguageText(648.1, "Port输入有误。"));
UiMethod.MessageBox(this, LanguagePack.GetLanguageText(648.2, "IP或域名输入有误。"));
this.WaitingShow(EnumObj.ImgType.Loading, LanguagePack.GetLanguageText(592.0, "正在执行中，请稍候..."));
LanguagePack.GetLanguageText(651.24, "起始ADDR", (Control)this.lblPackStart);
LanguagePack.GetLanguageText(651.25, "结束ADDR", (Control)this.lblPackEnd);
LanguagePack.GetLanguageText(651.26, "起始PACK", (Control)this.lblPackStart);
LanguagePack.GetLanguageText(651.27, "结束PACK", (Control)this.lblPackEnd);
LanguagePack.GetLanguageText(661.1, "复制", (Control) this.btnCopy);
LanguagePack.GetLanguageText(661.2, "Save As", (Control) this.btnSaveImg);
LanguagePack.GetLanguageText(5.0, "OK", (Control) this.btnOK);
LanguagePack.GetLanguageText(6.0, "Cancel", (Control) this.btnCancel);
this.btnOK.Text = LanguagePack.GetLanguageText(5.0, "OK");
this.Text = LanguagePack.GetLanguageText(9.0, "Message", (Control)this.lblTitle);
LanguagePack.GetLanguageTextCallBack method = new LanguagePack.GetLanguageTextCallBack(LanguagePack.GetLanguageText);
LanguagePack.GetLanguageText(599.0, "ON", (Control) label);
LanguagePack.GetLanguageText(600.0, "OFF", (Control) label);
LanguagePack.GetLanguageText(35.0, "The passwords entered do not match.", (Control) this.label4);
LanguagePack.GetLanguageText(65.0, "Operation failed", (Control) this.label4);
LanguagePack.GetLanguageText(36.0, "Incorrect original password", (Control) this.label4);
this.lblTitle.Text = LanguagePack.GetLanguageText(31.0, "Change Password");
LanguagePack.GetLanguageText(32.0, "Original Password", (Control) this.label1);
LanguagePack.GetLanguageText(33.0, "New Password", (Control) this.label2);
LanguagePack.GetLanguageText(34.0, "Confirm Password", (Control) this.label3);
LanguagePack.GetLanguageText(5.0, "Confirm", (Control) this.btn_OK);
LanguagePack.GetLanguageText(6.0, "Cancel", (Control) this.btn_CancleModifyPwd);
return this.GpsStatus == 1 ? LanguagePack.GetLanguageText(666.0, "正常") : LanguagePack.GetLanguageText(667.0, "Abnormal");
return this.GpsStatus == 1 ? LanguagePack.GetLanguageText(666.0, "正常") : LanguagePack.GetLanguageText(667.0, "Abnormal");
return this.SimCarStatus == 1 ? LanguagePack.GetLanguageText(651.17, "Card inserted") : LanguagePack.GetLanguageText(651.18, "No card inserted");
return this.SimCarStatus == 1 ? LanguagePack.GetLanguageText(651.17, "Card inserted") : LanguagePack.GetLanguageText(651.18, "No card inserted");
return this.NetworkActive == 1 ? LanguagePack.GetLanguageText(651.19, "Activated") : LanguagePack.GetLanguageText(651.21, "Not active");
return this.NetworkActive == 1 ? LanguagePack.GetLanguageText(651.19, "Activated") : LanguagePack.GetLanguageText(651.21, "Not active");
return this.TCPconnected == 1 ? LanguagePack.GetLanguageText(651.22, "Connected") : LanguagePack.GetLanguageText(651.23, "Not connected");
return this.TCPconnected == 1 ? LanguagePack.GetLanguageText(651.22, "Connected") : LanguagePack.GetLanguageText(651.23, "Not connected");
return this.ServerConnectTimeout == 1 ? LanguagePack.GetLanguageText(79.0, "超时") : LanguagePack.GetLanguageText(666.0, "正常");
return this.ServerConnectTimeout == 1 ? LanguagePack.GetLanguageText(79.0, "超时") : LanguagePack.GetLanguageText(666.0, "正常");
return this.PackSN_Abnormal == 0 ? LanguagePack.GetLanguageText(666.0, "正常") : LanguagePack.GetLanguageText(667.0, "Abnormal");
return this.PackSN_Abnormal == 0 ? LanguagePack.GetLanguageText(666.0, "正常") : LanguagePack.GetLanguageText(667.0, "Abnormal");
return this.PackSN_Abnormal == 1 ? LanguagePack.GetLanguageText(666.0, "正常") : LanguagePack.GetLanguageText(667.0, "Abnormal");
return this.PackSN_Abnormal == 1 ? LanguagePack.GetLanguageText(666.0, "正常") : LanguagePack.GetLanguageText(667.0, "Abnormal");
